---
layout: post
title:      "Is it really over?"
date:       2019-07-26 22:54:12 +0000
permalink:  is_it_really_over
---


I'm being dramatic again. The short answer is: no, of course not. Flatiron is just the beginning of my time as a software engineer. The long answer is, since I've finished my actual final project as a Flatiron student, *this* part is over. The part where I don't understand object orientation is over. The part where I can't remember which thing is recursion and which is iteration is over. Though I spent a long time with some knowledge of JS, Ruby, HTML, and CSS, I was completely lost. In German, there are many instances in which saying "I am...(hungry/thirsty/etc.)" rather than "I have...(hunger/thirst/etc.)" will make you sound anything from silly to downright rude; that was me trying to do anything with my limited knowledge before Flatiron. 

The React/Redux project was an interesting one for me. As per usual, I needed to be talked down a bit from trying to do too much at once. It was the first time I thought to myself, "Oh, I know how to do **all** of this, it would just take more manpower than I have and more time than I should be spending on this." While pairing on labs had already opened my eyes to the wonders of working with another programmer, that was the first time I got really excited to work on a team.

In the absence of a team, I decided to do a simple wish list I titled "Think It Over". Today, it's all too easy to browse the web for items we want, and buy them on a whim. In fact, this might have been my most well liked app idea, and I thought I'd had some good ones before. The idea is simple: see something you like while browsing endless internet shops? Trying to go easy on your wallet? Add it to a list, include the basic info: what it is, what it's good for, how much will it cost me, and where can I get it (a link to the item)? Give yourself at least a week, then revisit the list. Do you still want it? Is it worth it right now? If you still want it and think you need it, follow the link you saved and buy it, then feel free to delete it from your list! Such a simple tool that has been so helpful.

The Rails API was fairly simple, I really only needed to keep track of items. Don't you worry, I've already thought about where I could take it with time, but for now it's just storing basic information about each item, the entire database handling one list for one person. Each attribute is just a string, because if you want to make a note to yourself that buying yet another pair of shoes will cost you "two date nights", I'm not going to stop you. On the front end, React is the star, everything you see and interact with is a React component. I'll admit, learning React was a process of feeling lost, then getting it, then getting lost again. I can now comfortably say I understand plenty, and have much more to learn (as with anything). Redux holds onto the list, thunk talks to the Rails API to get the list, persist new items, and delete items we've bought or thought better of buying. React Router helps us navigate the app, with familiar RESTful routes.

At the end of every project, what I'm really struck by is how much I've learned. Being the final project, it was especially shocking. I can build a React app. Not only that, but when I come across other programming languages, it's less like a whole new language and more like being exposed to a new dialect. Honestly, even I'm amazed at what I'm really capable of. It's hard to shove so much new information into your brain so quickly, but here I am, brain largely intact. And while this has been an incredible journey all on its own, a whole world is open to me now. I can't wait to keep learning.
